<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<!-- 数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver_class}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<bean id="c3p0DataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->
	    <property name="driverClass" value="${driver_class}"/>
	    <!-- 指定连接数据库的URL-->
	    <property name="jdbcUrl" value="${url}"/>
	    <!-- 指定连接数据库的用户名-->
	    <property name="user" value="${username}"/>
	    <!-- 指定连接数据库的密码-->
	    <property name="password" value="${password}"/>
	    <!-- 指定连接池中保留的最大连接数. Default:15-->
	    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	    <!-- 指定连接池中保留的最小连接数-->
	    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	    <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
	    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
	    <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
	    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	    <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
	    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
	    <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
	    	但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
	    <property name="maxStatements" value="${jdbc.maxStatements}"/>
	    <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
	    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
	</bean>
	
	
	<!-- Session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="c3p0DataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>cn.bdqn.reserve.entity.Reserve</value>
				<value>cn.bdqn.reserve.entity.Room</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"
	/>
	
	<!-- 事务增强 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="*"/>
		</tx:attributes>	
	</tx:advice>
	
	<!-- 组装事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.bdqn.reserve.service..*.*(..))" id="serviceMethods"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>	
	</aop:config>
	
	<bean id="reserveDAO" class="cn.bdqn.reserve.dao.ReserveDAOImpl"
		p:sessionFactory-ref="sessionFactory"
	/>

	<bean id="reserveService" class="cn.bdqn.reserve.service.ReserveServiceImpl"
		p:reserveDAO-ref="reserveDAO"
	/>
	
	
	
	
	
	
	
	
	

</beans>
